# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  pull_request:
    types:
      - closed
    paths:
      - 'app/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#  if_merged:
#    if: github.event.pull_request.merged == true
  builds:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - id: echoenv
      run: echo ${{ github.event.head_commit.message }}
    
    - id: release
      uses: rymndhng/release-on-push-action@master
      with:
        bump_version_scheme: patch

    - name: checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Print Git ref
      run: echo ${{ github.ref }}
      
    - run: git fetch --force --tags

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - id: goreleaser
      uses: goreleaser/goreleaser-action@v4
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_NAME: demo-app

    - name: Jira Login
      uses: atlassian/gajira-login@v3
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

    
    - id: find-issue-branch
      if: "!contains(github.ref, 'main')"
      name: Find in commit messages
      uses: atlassian/gajira-find-issue-key@v3
      with:
        string: ${{ github.ref }}
        
    - name: Comment on issue branch
      if: "!contains(github.ref, 'main')"
      uses: atlassian/gajira-comment@v3
      with:
        issue: ${{ steps.find-issue-branch.outputs.issue }}
        comment: ${{ github.event.pusher.name }} test comment

    - id: find-issue-main
      if: "contains(github.ref, 'main')"
      name: Find in merged commit messages
      uses: atlassian/gajira-find-issue-key@v3
      with:
        string: ${{ github.event.head_commit.message }}
        
    - name: Comment on issue main
      if: "contains(github.ref, 'main')"
      uses: atlassian/gajira-comment@v3
      with:
        issue: ${{ steps.find-issue-main.outputs.issue }}
        comment: ${{ github.event.pusher.name }} test comment
